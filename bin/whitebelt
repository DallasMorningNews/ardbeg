#!/usr/bin/env python
from jinja2 import Environment, FileSystemLoader
import os

settings = { 'home_dir': '.',
	'template_dirs': ['templates', '.templates'],
	'output_dir': './output',
	'default_template_name': 'site.html',
	'data_directory': 'data',
}



home_dir = os.path.abspath(settings['home_dir'])
template_dirs = [os.path.abspath(d) for d in settings['template_dirs']]
output_dir = os.path.abspath(settings['output_dir'])
ignore_dirs = template_dirs + [output_dir]
default_template_name = settings['default_template_name']


env = Environment(loader=FileSystemLoader(template_dirs))
default_template = env.get_template(default_template_name)



def in_ignored_paths(path, ignored_paths):
	for ignored_path in ignored_paths:
		if os.path.abspath(path).startswith(os.path.abspath(ignored_path)):
			return True
	return False

def render_file_to_output(relpath, filename, outpath):
	"""
	Takes a file in path relative to the current path and renders the file
	in the appropriate directory within the outpath
	"""
	print os.path.basename(outpath) + ": "  + filename
	






os.chdir(home_dir)

for (dir, subdirs, files) in os.walk(home_dir):
	if in_ignored_paths(dir, ignore_dirs):
		pass
		print "ignoring: " + os.path.relpath(dir)
	else:
		source_path = os.path.relpath(dir)
		target_path = os.path.realpath(os.path.join(output_dir, source_path))
		print "writing to:" + target_path
		for file in files:
			if file.startswith("."):
				pass
			else:
				render_file_to_output(source_path, file, target_path)
# 
# 
# 
# for filename in file_list:
# 	if filename.endswith(".html"):
# 		content = open(filename, 'r').read()
# 		print(content)
# 		outfile = open("output/"+filename, 'w')
# 		if content.startswith("{% extends"):
# 			new_template = env.from_string(content)
# 			outfile.write(new_template.render())
# 		else:
# 			outfile.write(template.render(content=content))
# 		outfile.close()
